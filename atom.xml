<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Garth's Coding Blog]]></title>
  <link href="http://garth0323.github.io/atom.xml" rel="self"/>
  <link href="http://garth0323.github.io/"/>
  <updated>2014-03-26T15:55:39+00:00</updated>
  <id>http://garth0323.github.io/</id>
  <author>
    <name><![CDATA[Garth Gaughan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bcrypt and Rails 4: Step-by-Step]]></title>
    <link href="http://garth0323.github.io/blog/2014/03/26/bcrypt-and-rails-4-step-by-step/"/>
    <updated>2014-03-26T15:52:08+00:00</updated>
    <id>http://garth0323.github.io/blog/2014/03/26/bcrypt-and-rails-4-step-by-step</id>
    <content type="html"><![CDATA[<p>I am not a big fan of Devise for the expected reasons: size, lack of flexiibility, etc.
I was creating my own authentication in my rails 4.0.2 app and trying to use bcrypt.
Much of the documentation left out some simple items for noobs so I thought I
would put together a step-by-step here.</p>

<!-- more -->


<blockquote><p>The main purpose of bcrypt-ruby is to change the password field
into an unreadable more secure hash in your database. It is very easy to implement
in rails 4 with has_secure_password.
This is much easier than in earlier versions of rails as
has_secure_password has the methods you need built in.</p></blockquote>

<h2>Installation</h2>

<p>In your gemfile:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>gem <span class="s1">&#39;bcrypt-ruby&#39;</span>, <span class="s1">&#39;~&gt; 3.0.1&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>Do not use any version of bcrypt-ruby higher than 3.0.9 as rails does not yet support this.</p>

<p>In your database, make sure that you name your password fields :password_digest,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>class AddPasswordDigestToUsers &lt; ActiveRecord::Migration
</span><span class='line'>  def change
</span><span class='line'>      add_column :users, :password_digest, :string
</span><span class='line'>  end
</span><span class='line'>end
</span></code></pre></td></tr></table></div></figure>


<p>This is how I added :password_digest. There are other options such as doing a rake db:rollback and changing the name in the migration file and the db:migrate again.</p>

<p>In the user.rb file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>class User &lt; ActiveRecord::Base
</span><span class='line'>  has_secure_password validations: <span class="nb">false</span>
</span><span class='line'>end
</span></code></pre></td></tr></table></div></figure>


<p>has_secure_password is all that is needed here but adding <em>validations: false</em> allows more flexibility and I can add my own validations. Again, this is optional.</p>

<p>In your form make sure you use :password, here is an example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;div <span class="nv">class</span><span class="o">=</span><span class="s1">&#39;well&#39;</span>&gt;
</span><span class='line'>    &lt;%<span class="o">=</span> form_tag <span class="s1">&#39;/login&#39;</span> <span class="k">do</span> %&gt;
</span><span class='line'>      &lt;div <span class="nv">class</span><span class="o">=</span><span class="s1">&#39;control-group&#39;</span>&gt;
</span><span class='line'>          &lt;%<span class="o">=</span> label_tag :username %&gt;
</span><span class='line'>          &lt;%<span class="o">=</span> text_field_tag :username %&gt;
</span><span class='line'>      &lt;/div&gt;
</span><span class='line'>      &lt;div <span class="nv">class</span><span class="o">=</span><span class="s1">&#39;control-group&#39;</span>&gt;
</span><span class='line'>          &lt;%<span class="o">=</span> label_tag :password %&gt;
</span><span class='line'>          &lt;%<span class="o">=</span> password_field_tag :password %&gt;
</span><span class='line'>      &lt;/div&gt;
</span><span class='line'>      &lt;%<span class="o">=</span> submit_tag <span class="s1">&#39;Login&#39;</span>, class: <span class="s1">&#39;btn btn-success&#39;</span> %&gt;
</span><span class='line'>  &lt;% end %&gt;
</span><span class='line'>&lt;/div&gt;
</span><span class='line'>end
</span></code></pre></td></tr></table></div></figure>


<p>This is left out of most of the documentation I found.</p>

<p>Everything should work now. bcrypt-ruby 3.1 and up is supposed to work with
ActiveRecord soon but I don&rsquo;t know the date.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bought a Mac]]></title>
    <link href="http://garth0323.github.io/blog/2014/02/17/bought-a-mac/"/>
    <updated>2014-02-17T21:28:54+00:00</updated>
    <id>http://garth0323.github.io/blog/2014/02/17/bought-a-mac</id>
    <content type="html"><![CDATA[<p>I bought a Macbook Pro for three reasons:</p>

<ul>
<li>I am learning Rails and there was too many problems on my Windows machine</li>
<li>I wanted to fit in with the cool kids.</li>
<li>I like paying more for accessories!</li>
</ul>


<p> <!-- more -->
Learning RoR is fun, frustrating, and many other things. Much of the frustration I was experiencing had to do with the
disconnect between developing in Rails and Windows. I had thrown a temporary band-aid by using Nitrous.io for much of
my develpoment needs.</p>

<p>I decided to relieve myself fully of the frustration and buy a Macbook Pro Retina 13&#8221;. This has led to some temporary
frustrating moments as well, we will call this a learning curne on my new machine. I am learning all the new tricks and
tweaks I can do and I definitley enjoy developing on the Mac.</p>

<p>I am a big fan of android and love my Motorola Maxx. I think I am still a long way from switching to the iphone. So don&rsquo;t
call me an apple fanboy quite yet.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Implementing Sinatra and Shotgun on Nitrous.io]]></title>
    <link href="http://garth0323.github.io/blog/2014/01/16/implementing-sinatra-and-shotgun-on-nitrous-dot-io/"/>
    <updated>2014-01-16T02:41:34+00:00</updated>
    <id>http://garth0323.github.io/blog/2014/01/16/implementing-sinatra-and-shotgun-on-nitrous-dot-io</id>
    <content type="html"><![CDATA[<p>Configuring Sinatra and Shotgun on Nitrous.io is a pretty straightforward
process once you have the commands to do so. Finding these was not easy for
me and so I wanted to make it easy for others.</p>

<!-- more -->


<p>First thing you need to know is that nitrous.io needs to run on host
&lsquo;0.0.0.0&rsquo; in order to work properly. The binding must be changed from
the default of &lsquo;localhost&rsquo; for Sinatra and Shotgun.</p>

<h4>Sinatra</h4>

<p>Sinatra is pretty straightforward just put the following code in your
main.rb file and this allows you to preview on port 3000 which is the
nitrous.io default.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>configure :development do
</span><span class='line'>  set :bind, '0.0.0.0'
</span><span class='line'>  set :port, 3000
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>Start your server with this in your console:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby main.rb</span></code></pre></td></tr></table></div></figure>


<h4>Shotgun</h4>

<p>Shotgun is a slightly more annoying but still fairly simple and handled
from the command line. Once shotgun is installed put this in your command
line:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>shotgun -o, --host 0.0.0.0</span></code></pre></td></tr></table></div></figure>


<p>This will start the server.</p>

<p>View it by going to any of the previews in Nitrous and then changing the
end of the URL to 9393. This is the default port for shotgun.</p>

<p>There are still some workarounds necessary for developing on Nitrous but the
upside still seems worth it to me.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why I am laughing on Nitrous.io while I learn RoR]]></title>
    <link href="http://garth0323.github.io/blog/2014/01/06/why-i-am-laughing-on-nitous-dot-io-while-i-learn-ror/"/>
    <updated>2014-01-06T17:48:03+00:00</updated>
    <id>http://garth0323.github.io/blog/2014/01/06/why-i-am-laughing-on-nitous-dot-io-while-i-learn-ror</id>
    <content type="html"><![CDATA[<p>I am new to Ruby on Rails and coding in general. Up to this point I have
always tried to work in the cloud. I do not like being tied to one machine,
and I hate the idea that I am responsible for saving files and risk losing
them if a machine goes down.</p>

<!-- more -->


<p>For example, When Google Music became available I could not wait for an
invite so that I did not have to store alof my music on my phone and
computer. There are drawbacks to working in the cloud but it all comes down
to three major benefits: <strong>Location, Location, Location</strong>.</p>

<p>Using nitrus.io allows me to use any machine, anywhere. Most importantly,
and most impressively I am able to use my Chromebook for RoR development. I
prefer this to my PC, mostly because of battery power. Learning in the Linux
environment that nitrous.io seems like a benefit down the road as well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trust and Loathing in Ruby]]></title>
    <link href="http://garth0323.github.io/blog/2013/12/31/trust-and-loathing-in-ruby/"/>
    <updated>2013-12-31T22:06:59+00:00</updated>
    <id>http://garth0323.github.io/blog/2013/12/31/trust-and-loathing-in-ruby</id>
    <content type="html"><![CDATA[<p>Learning Ruby or probably any language is scary. It is exciting but scary. I
had to learn to trust that things are going to work even when I don&rsquo;t
understand why.</p>

<!-- more -->


<ul>
<li>I understand that A + B = C</li>
<li>But sometimes I don&rsquo;t know how B got it&rsquo;s value so I just test the outcome.</li>
<li>I sometimes Google issues and don&rsquo;t understand the answer, but I test it and it works out.</li>
</ul>


<p>This trust in the community allows me to expirement and stretch beyond what I know now.
I am allowed to mess up knowing that the answer is just a Google search away.
Or maybe 4 hours worth of Google searches away&hellip;</p>
]]></content>
  </entry>
  
</feed>
